@model MVCSample.Models.UploadAttachmentModel

@{
    ViewBag.Title = "ApplyAttachment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>ApplyAttachment</h2>

@using (Html.BeginForm("ApplyAttachment", "Home", FormMethod.Post, new { encType = "multipart/form-data", name = "partialupload" }))
{
    @Html.AntiForgeryToken()
    <div class="container-fluid">


        @*VALID ID*@
        <div class="grpselect">
            <div class="form-group">
                <div class="col-sm-2 my-1">
                    <label for="ValidIdAttachment" class="col-form-label">@Model.ValidIdLabel<span style="color:red">@(!Model.IsValidIdRequired? "" : " *")</span></label>
                </div>
                <div class="col-sm-4 my-1">
                    <select name="ValidIdAttachment" class="form-control documentselection">
                        <option value="0" selected>Select Document Type</option>
                        @foreach (var item in Model.ValidIdList)
                        {
                            <option value="@item.AttachmentTypeId">@item.DocumentName</option>
                        }
                    </select>
                </div>
                <div class="col-sm-3 my-1">
                    <input type="file" class="form-control-file rawfileupload" style="display:none;" />
                </div>
            </div>
            <br /><br />
            <div class="container-fluid filelist"></div>
        </div>
        <br />

        @*PROOF OF INCOME*@
        <div class="grpselect">
            <div class="form-group">
                <div class="col-sm-2 my-1">
                    <label for="ProofOfIncomeAttachment" class="col-form-label">@Model.ProofOfIncomeLabel<span style="color:red">@(!Model.IsProofOfIncomeRequired ? "" : " *")</span></label>
                </div>
                <div class="col-sm-4 my-1">
                    <select name="ProofOfIncomeAttachment" class="form-control documentselection">
                        <option value="0" selected>Select Document Type</option>
                        @foreach (var item in Model.ProofOfIncomeList)
                        {
                            <option value="@item.AttachmentTypeId">@item.DocumentName</option>
                        }
                    </select>
                </div>
                <div class="col-sm-3 my-1">
                    <input type="file" class="form-control-file rawfileupload" style="display:none;" />
                </div>
            </div>
            <br /><br />
            <div class="container-fluid filelist"></div>
        </div>
        <br />

        @*OTHER ATTACHMENTS*@
        <div class="grpselect">
            <div class="form-group">
                <div class="col-sm-2 my-1">
                    <label for="OthersAttachment" class="col-form-label">@Model.OthersLabel<span style="color:red">@(!Model.IsOtherRequired ? "" : " *")</span></label>
                </div>
                <div class="col-sm-4 my-1">
                    <select name="OthersAttachment" class="form-control documentselection">
                        <option value="0" selected>Select Document Type</option>
                        @foreach (var item in Model.OthersList)
                        {
                            <option value="@item.AttachmentTypeId">@item.DocumentName</option>
                        }
                    </select>
                </div>
                <div class="col-sm-3 my-1">
                    <input type="file" class="form-control-file rawfileupload" style="display:none;" />
                </div>
            </div>
            <br /><br />
            <div class="container-fluid filelist"></div>
        </div>
        <br />

        <div class="col-sm-12" style="text-align: center;">
            <input class="reg-button go btnAttribute" id="btnSubmit" type="button" value="Next"><br>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $.fn.gparent = function (filter) {
            var parent = $(this).parent();
            if (parent == null || parent.is('html')) return parent;
            var filteredparent = $(this).parent(filter);

            if (filteredparent != null && filteredparent.length > 0 && filteredparent.is(filter))
                return filteredparent;

            return parent.gparent(filter);
        };

        $.fn.isValidFile = function () {
            if ($(this) == null || !$(this).is("input[type='file']")) return false;
            var extensionnames = ["jpg", "pdf","doc","docx","xlsx","ppt","psd","bmp"];
            var fileext = $(this).val().toLowerCase().split("/").reverse()[0].split("\\").reverse()[0].split(".").reverse()[0];
            for (var i = 0; i < extensionnames.length; i++) {
                if (extensionnames[i] == fileext) return true;
            };
            return false;
        };


        $(document).ready(function () {

            var isValidIdRequired = @Model.IsValidIdRequired.ToString().ToLower();
            var isProofOfIncomeRequired = @Model.IsProofOfIncomeRequired.ToString().ToLower();
            var isOtherRequired = @Model.IsOtherRequired.ToString().ToLower();


            $(".rawfileupload").on('change', function () {
                if ($(this).val() == "") return;

                if (!$(this).isValidFile()) {
                    alert("Invalid file type.");
                    $(this).val('');
                    return;
                }


                var original = $(this);
                var cloned = $(this).clone(true).val('').attr("style", "display:none");
                var groupParent = $(this).gparent('.grpselect');
                var destinationWrapper = groupParent.find('.filelist');
                var selection = groupParent.find('select').first();
                var selecttext = selection.children(':selected').text();
                var selectvalue = selection.children(':selected').val();
                var listname = selection.attr("name");
                var doclistname = listname + ".AttachmentFile";

                
                //controls
                var groupentry = $('<div />', { "class": 'form-group grpentry'});
                var indentwrapperentry = $('<div />', { "class": 'col-sm-2 my-1', "style": "padding-right: 0px !important; text-align:right !important;" });
                var indententry = $('<a />', { 'text': "x", "href": "#", "style": "color:gray !important; text-decoration: none !important;", "class": "lnkdeletedoc"});
                var labelwraperentry = $('<div />', { "class": 'col-sm-3 my-1' });
                var labelentry = $('<span />', { 'text': selecttext });
                var docnamelabelwraperentry = $('<div />', { "class": 'col-sm-4 my-1' });
                var docnamelabelentry = $('<span />', { 'text': original.val().split("/").reverse()[0].split("\\").reverse()[0] });
                var fileuploadwrapperentry = $('<div />', { "class": 'col' });
                var docnamewrapperentry = $('<div />', { "class": 'col' });
                var docnameentry = $('<input/>', { 'type': 'hidden', 'value': selecttext, 'name': listname + '.DocumentName'});
                var attachmenttypewrapperentry = $('<div />', { "class": 'col' });
                var attachmenttypeentry = $('<input/>', { 'type': 'hidden', 'value': selectvalue, 'name': listname + '.AttachmentTypeId' });


                cloned.insertAfter(original);
                original.attr("style", "display:none");
                original.attr("name", doclistname);

                indentwrapperentry.append(indententry);
                labelwraperentry.append(labelentry);
                docnamelabelwraperentry.append(docnamelabelentry);
                fileuploadwrapperentry.append(original);
                docnamewrapperentry.append(docnameentry);
                attachmenttypewrapperentry.append(attachmenttypeentry);

                selection.val(0);

                groupentry.append(indentwrapperentry);
                groupentry.append(labelwraperentry);
                groupentry.append(docnamelabelwraperentry);
                groupentry.append(fileuploadwrapperentry);
                groupentry.append(docnamewrapperentry);
                groupentry.append(attachmenttypewrapperentry);
                
                destinationWrapper.append(groupentry);
                destinationWrapper.append($('<br />', { 'style': 'font-size: 1px !important' }));                       
            });


            $('#btnSubmit').on('click', function () {

                //VALIDATE
                if (isValidIdRequired) {
                    alert($('.filelist').find('input[name^=ValidIdAttachment]').length);
                }

                if (isProofOfIncomeRequired) {
                    alert($('.filelist').find('input[name^=ProofOfIncomeAttachment]').length);
                }
                if (isOtherRequired) {
                    alert($('.filelist').find('input[name^=OthersAttachment]').length);
                }

                var inputcount = 0;
                //RENAME CONTROLS
                $('.filelist').each(function (index, val) {
                    var groupentry = $(val).find('.grpentry');
                    for (var i = 0; i < groupentry.length; i++) {
                        if ($(groupentry[i]).find('input').length > 0) {
                            $(groupentry[i]).find('input').each(function (ci, cv) {
                                var prefix = $(cv).attr('name').split(".")[0].split("[")[0];
                                var suffix = $(cv).attr('name').split(".").reverse()[0].split("[").reverse()[0];
                                $(cv).attr('name', ('[' + inputcount + '].' + suffix));
                            });
                            inputcount++;
                        }                        
                    }
                });
                
                $(this).gparent('form')[0].submit();
            });


            $(".documentselection").on("change", function () {
                var selection = $(this);
                var uploadfile = $(this).gparent('.grpselect').find('input:file').first();
                uploadfile.value = "";
                if (selection.val() == 0) {
                    $(uploadfile).css('display', 'none');
                } else {
                    $(uploadfile).css('display', '');
                }
            });
                        

            $("body").on("click", ".lnkdeletedoc",function (e) {                
                e.preventDefault = true;
                if (confirm("Are you sure you want to remove this?")) {
                    var parent = $(this).gparent('.grpentry')
                    parent.next('br').remove();
                    parent.remove();
                }                
            });            

        });
    </script>
}

