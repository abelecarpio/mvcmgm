@model MVCSample.Models.UploadAttachmentModel

@{
    ViewBag.Title = "TestApplyAttachment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>TestApplyAttachment</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UploadAttachmentModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ValidIdLabel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValidIdLabel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValidIdLabel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProofOfIncomeLabel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProofOfIncomeLabel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProofOfIncomeLabel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OthersLabel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OthersLabel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OthersLabel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsProofOfIncomeRequired, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsProofOfIncomeRequired)
                    @Html.ValidationMessageFor(model => model.IsProofOfIncomeRequired, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsValidIdRequired, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsValidIdRequired)
                    @Html.ValidationMessageFor(model => model.IsValidIdRequired, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsOtherRequired, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsOtherRequired)
                    @Html.ValidationMessageFor(model => model.IsOtherRequired, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @for (var i = 0; i < 2; i++)
        {
            @Html.TextBox("ValidIdAttachment[" + i + "].DocumentName")
        }
        @for (var i = 0; i < 2; i++)
        {
            @Html.TextBox("ProofOfIncomeAttachment[" + i + "].DocumentName")
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
